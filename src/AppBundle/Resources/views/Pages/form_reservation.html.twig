{% extends "@App/basePublic.html.twig" %}
{#navbar sur Réservation#}
{% block active4 %}active{% endblock %}

{% block head_js %}{% endblock %}

{% block contenu %}

    {#{{ dump(formreservation) }}#}
    <div class="container-fluid main resa_body_font ">
        <div class="row">
            <div class="col-md-3 border-right counters">
                <aside>
                    <p class="m-3"><em><u>déroulement de la réservation</u></em></p>
                    <div class="counters">
                        <p class="section"><em>inscription ou identification</em></p>
                        <p class="section">création d'une réservation</p>
                        <p class="section">création des places de spectateur</p>
                        <p class="section">validation de la réservation </p>
                        <p class="section">règlement de la réservation</p>
                    </div>
                </aside>
            </div>
            <div class="col-md-7">
                <main>
                    <div class="container ">
                        <div class="row d-block">

                            <div class="offset-md-1 col">
                                <header >
                                    <h2 class="title">Espace Réservation &nbsp&nbsp&nbsp&nbsp<span class="lien ml-5"><a href="{{ path('reservations_client') }}">Voir toutes vos Réservation</a></span></h2>
                                </header>
                                <p><em>Veuillez effectuer votre réservation. <br></em>

                                    si le champ client est vide veuillez vous identifier
                                </p>
                            </div>
                            <div class="text-center offset-md-1 col-4" role="alert">

                                {# ... editer tout message Flash #}
                                {% for label, messages in app.flashes %}
                                    {% for message in messages %}
                                        <div class="flash-{{ label }}">
                                            {{ message }}
                                        </div>
                                    {% endfor %}
                                {% endfor %}
                            </div>
                            <div class="row">
                                <div class="offset-md-2 col-7 mt-3">
                                    Date Réservation : {{ "now"|date("d/m/Y") }}
                                    {{ form_start(formreservation, {'attr': {'class': 'form'}}) }}

                                    <p>
                                        {#retourne message erreur si besoin après méthode isValid dans Controleur#}
                                        {{ form_errors(formreservation.spectacle) }}
                                        {{ form_label(formreservation.spectacle, null, {'label_attr':  {'class': 'form-label'}}) }}
                                    </p>
                                    <p>
                                        {{ form_widget(formreservation.spectacle, {'attr': {'class': 'form-control'}}) }}
                                    </p>

                                    <p>
                                        {{ form_label(formreservation.spectateurs, null, {'label_attr':  {'class': 'form-label'}}) }}
                                        <ul class="spectateur" data-prototype="{{ form_widget(formreservation.spectateurs.vars.prototype)|e('html_attr') }}">
                                        </ul>
                                    </p>
                                    <p>
                                        {#retourne message erreur si besoin après méthode isValid dans Controleur#}
                                        {{ form_errors(formreservation.client) }}
                                        {{ form_label(formreservation.client, null, {'label_attr':  {'class': 'form-label'}}) }} :

                                        {{ form_widget(formreservation.client, {'attr': {'class': 'form-control'}}) }}
                                    </p>
                                    <p>
                                    {# génération du champ CSRF - _token  (Cross Site Request Forgeries en champ caché #}
                                    {{ form_rest(formreservation) }}

                                    {{ form_end(formreservation) }}
                                    </p>
                                </div>
                            </div>

                        </div>
                    </div>
                </main>
            </div>
        </div>
        <div class="row image d-block">
        </div>
    </div>

{% endblock %}

{% block foot_js %}
    <script
            src="https://code.jquery.com/jquery-3.3.1.js"
            integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60="
            crossorigin="anonymous"></script>

    {# Partie JavaScript #}
    <script
            src="https://code.jquery.com/jquery-3.3.1.js"
            integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60="
            crossorigin="anonymous">
    </script>
    <script>

        var $collectionHolder;

        // setup an "add a tag" link
        var $addTagButton = $('<button type="button" class="add_tag_link">Ajoutez un spectateur</button>');
        var $newLinkLi = $('<li></li>').append($addTagButton);

        jQuery(document).ready(function() {
            // Get the ul that holds the collection of tags
            var $collectionHolder = $('ul.spectateur');

            // add a delete link to all of the existing tag form li elements
            //inutile pour le moment, ajoute un bouton qui créé la confusion
            /* $collectionHolder.find('li').each(function() {
                 addTagFormDeleteLink($(this));
             });*/

            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addTagButton.on('click', function(e) {
                // add a new tag form (see next code block)
                e.preventDefault();
                addTagForm($collectionHolder, $newLinkLi);
            });
        });


        function addTagForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            //console.log($collectionHolder);
            var prototype = $collectionHolder.data('prototype');

            //console
            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            //newForm = newForm.replace(/__name__label__/g, index);

            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1 );

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);

            // add a delete link to the new form
            addTagFormDeleteLink($newFormLi);
        }

        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormButton = $('<button type="button">enlever ce spectateur</button><br>');
            $tagFormLi.append($removeFormButton);

            $removeFormButton.on('click', function(e) {
                // remove the li for the tag form
                e.preventDefault();
                $tagFormLi.remove();
            });
        }
    </script>
{% endblock %}
